# This is a basic workflow to help you get started with Actions

name: Deploy Bot

# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the "master" branch
  push:
    paths:
      - 'bot/**'

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  deploy:
    # The type of runner that the job will run on
    runs-on: [self-hosted]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v3

      - name: write service_account file
        env:
          GOOGLE_SERVICE_ACCOUNT: ${{ secrets.GOOGLE_SERVICE_ACCOUNT }}
        run: |
          echo "$GOOGLE_SERVICE_ACCOUNT" > bot/service_account.json
      
      # Runs a set of commands using the runners shell
      - name: Run docker container
        env: 
          COMMIT_MESSAGE: ${{ github.event.head_commit.message }}
          COMMIT_BRANCH: ${{ github.ref_name }}
          TZ: ${{ vars.TIMEZONE }}
          DISCORD_BOT_TOKEN: ${{ secrets.DISCORD_BOT_TOKEN }}
          BOT_PREFIX: ${{ vars.BOT_PREFIX }}
          DEV_CHANNEL_ID : ${{ secrets.DEV_CHANNEL_ID }}
          CONTROL_PANEL_URL: ${{ vars.CONTROL_PANEL_URL }}
          CONTROL_PANEL_TOKEN: ${{ secrets.CONTROL_PANEL_TOKEN }}

        run: |
          cd bot
          docker compose up -d --build --force-recreate
        
      - name: Cleanup docker  container
        run: | 
          chmod +x docker_cleanup.sh
          ./docker_cleanup.sh
